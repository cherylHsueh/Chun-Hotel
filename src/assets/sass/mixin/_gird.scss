// variable
$gutter-width:30px;

//RWD斷點判斷函數
@mixin rwd ($breakpoint) {
  // @if $breakpoint == small{
  //     @media all and (max-width:$small){
  //         @content;
  //     }
  // }
  @if $breakpoint == mobile {
      @media all and (max-width: $mobile)  {
          @content;
      }
  }
  @if $breakpoint== medium {
      @media all and (max-width: $medium + 1px) and (min-width: $mobile + 1px) {
          @content;
      }
  }
  // @else if $breakpoint == large {
  //     @media all and (min-width: $large) {
  //         @content;
  //     }
  // }
  @else if $breakpoint == desktop {
      @media all and (min-width: $medium + 1px) {
          @content;
      }
  }
}

//創造格線系統迴圈函數
@mixin grid($attr , $num) {
    @for $i from 1 through $num {
        .cl-#{$attr}-#{$i}{
          display: flex;
          max-width: ($i / $num) * 100%;
          flex:0 0 (($i / $num) * 100%);
          padding-left: ($gutter-width / 2);
          padding-right:($gutter-width / 2) ;
        }
    }
}

.container{
  margin: 0 auto;
  max-width: 1200px;
  width: 100%;
  padding-left: $gutter-width / 2;
  padding-right: $gutter-width / 2;
  position: relative;
}


.row{
  display: flex;
  flex-wrap:wrap;
  margin-left: -($gutter-width / 2);
  margin-right: -($gutter-width / 2);
}


// @mixin grid($attr , $num) {
//   .cl-#{$attr}-#{1},.cl-#{$attr}-#{2},.cl-#{$attr}-#{3},.cl-#{$attr}-#{4},.cl-#{$attr}-#{5},.cl-#{$attr}-#{6},
//   .cl-#{$attr}-#{7},.cl-#{$attr}-#{8},.cl-#{$attr}-#{9},.cl-#{$attr}-#{10},.cl-#{$attr}-#{11},.cl-#{$attr}-#{12}{
//       float: left;
//       box-sizing: border-box;
//   };
//   @for $i from 1 through $num {
//       .cl-#{$attr}-#{$i}{
//         width: ($i / $num) * 100%;
//       }
//   }
// }
